// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model Account {
  id                 String  @id @default(cuid()) @map("_id") 
  userId             String  
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id") 
  sessionToken String   @unique
  userId       String 
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id") 
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts Post[]
}

model VerificationToken {
   id            String    @id @default(cuid()) @map("_id") 
  identifier String 
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
model Post{
   id            String    @id @default(cuid()) @map("_id") 
   title String
   content String
   imageUrl String?
   catName String?
   publicId String?
   category  Category? @relation(fields: [catName],references: [catName])
   authorEmail String
   author User @relation(fields: [authorEmail],references: [email])
   links String[]
   createdAt DateTime? @default(now())
   updatedAt DateTime ?
}

model Category{
   id            String    @id @default(cuid()) @map("_id") 
   catName String @unique
   posts Post[]
   postIDS String[] @db.ObjectId
}